package com.rodrigo.venuefinder.android.adapters;

import java.util.List;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.TextView;

import com.rodrigo.venuefinder.android.R;
import com.rodrigo.venuefinder.android.model.Venue;

public class VenueAdapter extends ArrayAdapter<Venue> {
    private LayoutInflater mInflater;

    public VenueAdapter(Context context, int textViewResourceId, List<Venue> objects) {
        super(context, textViewResourceId, objects);
        mInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        View view = convertView;
        Holder holder;

        if (view == null) {
            // View doesn't exist so create it and create the holder
            view = mInflater.inflate(R.layout.grid_item, parent, false);

            holder = new Holder();
            holder.txt_VenueName = (TextView) view.findViewById(R.id.txt_VenueName);

            view.setTag(holder);
        } else {
            // Just get our existing holder
            holder = (Holder) view.getTag();
        }

        // Populate via the holder for speed
        Venue venue = getItem(position);

        // Populate the item contents
        holder.txt_VenueName.setText(venue.getName());

        // Load the screen cap image on a background thread
//        Picasso.with(getContext())
//                .load(stream.getChannel().getScreen_cap_url_medium())
//                .placeholder(R.drawable.white)
//                .into(holder.screenCapThumbnailImage);

        // Load the channel thumbnail image on a background thread
//        Picasso.with(getContext())
//                .load(stream.getChannel().getImage_url_medium())
//                .placeholder(R.drawable.transparent)
//                .into(holder.channelThumbnailImage);

        return view;
    }

    // Holder class used to efficiently recycle view positions
    private static final class Holder {
        public TextView txt_VenueName;
    }
}
